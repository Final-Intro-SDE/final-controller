
package final1.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "People", targetNamespace = "http://ws.final1/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface People {


    /**
     * 
     * @param pid
     * @return
     *     returns final1.ws.Person
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPersonById", targetNamespace = "http://ws.final1/", className = "final1.ws.GetPersonById")
    @ResponseWrapper(localName = "getPersonByIdResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.GetPersonByIdResponse")
    @Action(input = "http://ws.final1/People/getPersonByIdRequest", output = "http://ws.final1/People/getPersonByIdResponse")
    public Person getPersonById(
        @WebParam(name = "pid", targetNamespace = "")
        int pid);

    /**
     * 
     * @return
     *     returns java.util.List<final1.ws.Person>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllPeople", targetNamespace = "http://ws.final1/", className = "final1.ws.GetAllPeople")
    @ResponseWrapper(localName = "getAllPeopleResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.GetAllPeopleResponse")
    @Action(input = "http://ws.final1/People/getAllPeopleRequest", output = "http://ws.final1/People/getAllPeopleResponse")
    public List<Person> getAllPeople();

    /**
     * 
     * @param person
     * @return
     *     returns final1.ws.Person
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "savePerson", targetNamespace = "http://ws.final1/", className = "final1.ws.SavePerson")
    @ResponseWrapper(localName = "savePersonResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.SavePersonResponse")
    @Action(input = "http://ws.final1/People/savePersonRequest", output = "http://ws.final1/People/savePersonResponse")
    public Person savePerson(
        @WebParam(name = "person", targetNamespace = "")
        String person);

    /**
     * 
     * @param person
     * @return
     *     returns final1.ws.Person
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updatePerson", targetNamespace = "http://ws.final1/", className = "final1.ws.UpdatePerson")
    @ResponseWrapper(localName = "updatePersonResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.UpdatePersonResponse")
    @Action(input = "http://ws.final1/People/updatePersonRequest", output = "http://ws.final1/People/updatePersonResponse")
    public Person updatePerson(
        @WebParam(name = "person", targetNamespace = "")
        String person);

    /**
     * 
     * @param pid
     * @return
     *     returns java.util.List<final1.ws.Person>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removePerson", targetNamespace = "http://ws.final1/", className = "final1.ws.RemovePerson")
    @ResponseWrapper(localName = "removePersonResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.RemovePersonResponse")
    @Action(input = "http://ws.final1/People/removePersonRequest", output = "http://ws.final1/People/removePersonResponse")
    public List<Person> removePerson(
        @WebParam(name = "pid", targetNamespace = "")
        int pid);

    /**
     * 
     * @param measure
     * @param pid
     * @return
     *     returns java.util.List<final1.ws.Healthprofile>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHProfByPrsnMeasure", targetNamespace = "http://ws.final1/", className = "final1.ws.GetHProfByPrsnMeasure")
    @ResponseWrapper(localName = "getHProfByPrsnMeasureResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.GetHProfByPrsnMeasureResponse")
    @Action(input = "http://ws.final1/People/getHProfByPrsnMeasureRequest", output = "http://ws.final1/People/getHProfByPrsnMeasureResponse")
    public List<Healthprofile> getHProfByPrsnMeasure(
        @WebParam(name = "pid", targetNamespace = "")
        int pid,
        @WebParam(name = "measure", targetNamespace = "")
        String measure);

    /**
     * 
     * @param pid
     * @return
     *     returns java.util.List<final1.ws.Healthprofile>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHealthprofByPid", targetNamespace = "http://ws.final1/", className = "final1.ws.GetHealthprofByPid")
    @ResponseWrapper(localName = "getHealthprofByPidResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.GetHealthprofByPidResponse")
    @Action(input = "http://ws.final1/People/getHealthprofByPidRequest", output = "http://ws.final1/People/getHealthprofByPidResponse")
    public List<Healthprofile> getHealthprofByPid(
        @WebParam(name = "pid", targetNamespace = "")
        int pid);

    /**
     * 
     * @param pid
     * @param mid
     * @return
     *     returns final1.ws.Healthprofile
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHealthProfByPidTid", targetNamespace = "http://ws.final1/", className = "final1.ws.GetHealthProfByPidTid")
    @ResponseWrapper(localName = "getHealthProfByPidTidResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.GetHealthProfByPidTidResponse")
    @Action(input = "http://ws.final1/People/getHealthProfByPidTidRequest", output = "http://ws.final1/People/getHealthProfByPidTidResponse")
    public Healthprofile getHealthProfByPidTid(
        @WebParam(name = "pid", targetNamespace = "")
        int pid,
        @WebParam(name = "mid", targetNamespace = "")
        int mid);

    /**
     * 
     * @param hid
     * @return
     *     returns final1.ws.Healthprofile
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHealthById", targetNamespace = "http://ws.final1/", className = "final1.ws.GetHealthById")
    @ResponseWrapper(localName = "getHealthByIdResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.GetHealthByIdResponse")
    @Action(input = "http://ws.final1/People/getHealthByIdRequest", output = "http://ws.final1/People/getHealthByIdResponse")
    public Healthprofile getHealthById(
        @WebParam(name = "hid", targetNamespace = "")
        int hid);

    /**
     * 
     * @param hprof
     * @return
     *     returns final1.ws.Healthprofile
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "saveHealthprofile", targetNamespace = "http://ws.final1/", className = "final1.ws.SaveHealthprofile")
    @ResponseWrapper(localName = "saveHealthprofileResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.SaveHealthprofileResponse")
    @Action(input = "http://ws.final1/People/saveHealthprofileRequest", output = "http://ws.final1/People/saveHealthprofileResponse")
    public Healthprofile saveHealthprofile(
        @WebParam(name = "hprof", targetNamespace = "")
        String hprof);

    /**
     * 
     * @param hprof
     * @return
     *     returns final1.ws.Healthprofile
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateHealth", targetNamespace = "http://ws.final1/", className = "final1.ws.UpdateHealth")
    @ResponseWrapper(localName = "updateHealthResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.UpdateHealthResponse")
    @Action(input = "http://ws.final1/People/updateHealthRequest", output = "http://ws.final1/People/updateHealthResponse")
    public Healthprofile updateHealth(
        @WebParam(name = "hprof", targetNamespace = "")
        String hprof);

    /**
     * 
     * @param hid
     * @return
     *     returns final1.ws.Healthprofile
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeHealth", targetNamespace = "http://ws.final1/", className = "final1.ws.RemoveHealth")
    @ResponseWrapper(localName = "removeHealthResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.RemoveHealthResponse")
    @Action(input = "http://ws.final1/People/removeHealthRequest", output = "http://ws.final1/People/removeHealthResponse")
    public Healthprofile removeHealth(
        @WebParam(name = "hid", targetNamespace = "")
        int hid);

    /**
     * 
     * @return
     *     returns java.util.List<final1.ws.Type>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllType", targetNamespace = "http://ws.final1/", className = "final1.ws.GetAllType")
    @ResponseWrapper(localName = "getAllTypeResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.GetAllTypeResponse")
    @Action(input = "http://ws.final1/People/getAllTypeRequest", output = "http://ws.final1/People/getAllTypeResponse")
    public List<Type> getAllType();

    /**
     * 
     * @param tid
     * @return
     *     returns final1.ws.Type
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTypeById", targetNamespace = "http://ws.final1/", className = "final1.ws.GetTypeById")
    @ResponseWrapper(localName = "getTypeByIdResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.GetTypeByIdResponse")
    @Action(input = "http://ws.final1/People/getTypeByIdRequest", output = "http://ws.final1/People/getTypeByIdResponse")
    public Type getTypeById(
        @WebParam(name = "tid", targetNamespace = "")
        int tid);

    /**
     * 
     * @param mes
     * @return
     *     returns java.util.List<final1.ws.Type>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTypeByString", targetNamespace = "http://ws.final1/", className = "final1.ws.GetTypeByString")
    @ResponseWrapper(localName = "getTypeByStringResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.GetTypeByStringResponse")
    @Action(input = "http://ws.final1/People/getTypeByStringRequest", output = "http://ws.final1/People/getTypeByStringResponse")
    public List<Type> getTypeByString(
        @WebParam(name = "mes", targetNamespace = "")
        String mes);

    /**
     * 
     * @param typ
     * @return
     *     returns final1.ws.Type
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "saveType", targetNamespace = "http://ws.final1/", className = "final1.ws.SaveType")
    @ResponseWrapper(localName = "saveTypeResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.SaveTypeResponse")
    @Action(input = "http://ws.final1/People/saveTypeRequest", output = "http://ws.final1/People/saveTypeResponse")
    public Type saveType(
        @WebParam(name = "typ", targetNamespace = "")
        String typ);

    /**
     * 
     * @param typ
     * @return
     *     returns final1.ws.Type
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateType", targetNamespace = "http://ws.final1/", className = "final1.ws.UpdateType")
    @ResponseWrapper(localName = "updateTypeResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.UpdateTypeResponse")
    @Action(input = "http://ws.final1/People/updateTypeRequest", output = "http://ws.final1/People/updateTypeResponse")
    public Type updateType(
        @WebParam(name = "typ", targetNamespace = "")
        String typ);

    /**
     * 
     * @param typ
     * @return
     *     returns final1.ws.Type
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeType", targetNamespace = "http://ws.final1/", className = "final1.ws.RemoveType")
    @ResponseWrapper(localName = "removeTypeResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.RemoveTypeResponse")
    @Action(input = "http://ws.final1/People/removeTypeRequest", output = "http://ws.final1/People/removeTypeResponse")
    public Type removeType(
        @WebParam(name = "typ", targetNamespace = "")
        String typ);

    /**
     * 
     * @return
     *     returns java.util.List<final1.ws.Goal>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllGoal", targetNamespace = "http://ws.final1/", className = "final1.ws.GetAllGoal")
    @ResponseWrapper(localName = "getAllGoalResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.GetAllGoalResponse")
    @Action(input = "http://ws.final1/People/getAllGoalRequest", output = "http://ws.final1/People/getAllGoalResponse")
    public List<Goal> getAllGoal();

    /**
     * 
     * @param gol
     * @return
     *     returns final1.ws.Goal
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "saveGoal", targetNamespace = "http://ws.final1/", className = "final1.ws.SaveGoal")
    @ResponseWrapper(localName = "saveGoalResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.SaveGoalResponse")
    @Action(input = "http://ws.final1/People/saveGoalRequest", output = "http://ws.final1/People/saveGoalResponse")
    public Goal saveGoal(
        @WebParam(name = "gol", targetNamespace = "")
        String gol);

    /**
     * 
     * @param gid
     * @return
     *     returns final1.ws.Goal
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGoalById", targetNamespace = "http://ws.final1/", className = "final1.ws.GetGoalById")
    @ResponseWrapper(localName = "getGoalByIdResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.GetGoalByIdResponse")
    @Action(input = "http://ws.final1/People/getGoalByIdRequest", output = "http://ws.final1/People/getGoalByIdResponse")
    public Goal getGoalById(
        @WebParam(name = "gid", targetNamespace = "")
        int gid);

    /**
     * 
     * @param goal
     * @return
     *     returns final1.ws.Goal
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateGoal", targetNamespace = "http://ws.final1/", className = "final1.ws.UpdateGoal")
    @ResponseWrapper(localName = "updateGoalResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.UpdateGoalResponse")
    @Action(input = "http://ws.final1/People/updateGoalRequest", output = "http://ws.final1/People/updateGoalResponse")
    public Goal updateGoal(
        @WebParam(name = "goal", targetNamespace = "")
        String goal);

    /**
     * 
     * @param pid
     * @param tid
     * @return
     *     returns final1.ws.Goal
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGolByPidTid", targetNamespace = "http://ws.final1/", className = "final1.ws.GetGolByPidTid")
    @ResponseWrapper(localName = "getGolByPidTidResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.GetGolByPidTidResponse")
    @Action(input = "http://ws.final1/People/getGolByPidTidRequest", output = "http://ws.final1/People/getGolByPidTidResponse")
    public Goal getGolByPidTid(
        @WebParam(name = "pid", targetNamespace = "")
        int pid,
        @WebParam(name = "tid", targetNamespace = "")
        int tid);

    /**
     * 
     * @param goal
     * @return
     *     returns java.util.List<final1.ws.Goal>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteGoal", targetNamespace = "http://ws.final1/", className = "final1.ws.DeleteGoal")
    @ResponseWrapper(localName = "deleteGoalResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.DeleteGoalResponse")
    @Action(input = "http://ws.final1/People/deleteGoalRequest", output = "http://ws.final1/People/deleteGoalResponse")
    public List<Goal> deleteGoal(
        @WebParam(name = "Goal", targetNamespace = "")
        int goal);

    /**
     * 
     * @param pid
     * @return
     *     returns java.util.List<final1.ws.Goal>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGoalByPid", targetNamespace = "http://ws.final1/", className = "final1.ws.GetGoalByPid")
    @ResponseWrapper(localName = "getGoalByPidResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.GetGoalByPidResponse")
    @Action(input = "http://ws.final1/People/getGoalByPidRequest", output = "http://ws.final1/People/getGoalByPidResponse")
    public List<Goal> getGoalByPid(
        @WebParam(name = "pid", targetNamespace = "")
        int pid);

    /**
     * 
     * @return
     *     returns java.util.List<final1.ws.Healthprofile>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllHealth", targetNamespace = "http://ws.final1/", className = "final1.ws.GetAllHealth")
    @ResponseWrapper(localName = "getAllHealthResponse", targetNamespace = "http://ws.final1/", className = "final1.ws.GetAllHealthResponse")
    @Action(input = "http://ws.final1/People/getAllHealthRequest", output = "http://ws.final1/People/getAllHealthResponse")
    public List<Healthprofile> getAllHealth();

}
